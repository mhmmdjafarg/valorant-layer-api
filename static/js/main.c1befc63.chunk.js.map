{"version":3,"sources":["player/PlayerGreen.js","player/PlayerRed.js","App.js","reportWebVitals.js","index.js"],"names":["PlayerGreen","props","skillList","datas","skillQuantity","map","quantity","key","className","src","process","agent","alt","name","shield","health","weapon","id","PlayerRed","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1befc63.chunk.js","sourcesContent":["import \"./PlayerGreen.css\";\n\nconst PlayerGreen = (props) => {\n  // Looping through skills\n  const skillList = props.datas.skillQuantity.map((quantity, key) => (\n    <div className={`row ${(quantity === 0) ? 'empty' : ''} `} key={key + 'green'}>\n      <img\n        className=\"skill-icon\"\n        src={`${process.env.PUBLIC_URL}/assets/${props.datas.agent + (key+1)}.svg`}\n        alt=\"\"\n      />\n      <p>{props.datas.skillQuantity[key]}</p>\n    </div>\n  ));\n\n  return (\n    <div className=\"player\">\n      <div className=\"player-card\">\n        <div className=\"side-card\">\n          <img src={`${process.env.PUBLIC_URL}/assets/${props.datas.agent}.svg`} alt=\"\" />\n          <p className=\"player-name\">{props.datas.name}</p>\n        </div>\n        <div className=\"centre-card-green\">\n          <p>{props.datas.shield}</p>\n          <p>{props.datas.health}</p>\n        </div>\n        <div className=\"skill-card skill\">\n          {skillList}\n        </div>\n      </div>\n      <div className=\"weapon\">\n        <img src={`${process.env.PUBLIC_URL}/assets/${props.datas.weapon}.png`} alt=\"\" />\n      </div>\n      <div id=\"circle-green\">\n        <img className=\"circular-image\" src={ `${process.env.PUBLIC_URL}/assets/${props.datas.agent + 'Ultimate'}.svg`} alt=\"\" />\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerGreen;\n","import \"./PlayerRed.css\";\n\nconst PlayerRed = (props) => {\n  // Looping through skills\n  const skillList = props.datas.skillQuantity.map((quantity, key) => (\n    <div className={`row ${quantity === 0 ? \"empty\" : \"\"} `} key={key + 'red'}>\n      <p>{props.datas.skillQuantity[key]}</p>\n      <img\n        className=\"skill-icon\"\n        src={`${process.env.PUBLIC_URL}/assets/${props.datas.agent + (key + 1)}.svg`}\n        alt=\"\"\n      />\n    </div>\n  ));\n\n  return (\n    <div className=\"player\">\n      <div className=\"weapon\">\n        <img\n          className=\"rotate\"\n          src={`${process.env.PUBLIC_URL}/assets/${props.datas.weapon}.png`}\n          alt=\"\"\n        />\n      </div>\n      <div className=\"player-card\">\n        <div className=\"skill-card skill\">{skillList}</div>\n        <div className=\"centre-card-red\">\n          <p>{props.datas.shield}</p>\n          <p>{props.datas.health}</p>\n        </div>\n        <div className=\"side-card\">\n          <img\n            className=\"rotate\"\n            src={`${process.env.PUBLIC_URL}/assets/${props.datas.agent}.svg`}\n            alt=\"\"\n          />\n          <p className=\"player-name\">{props.datas.name}</p>\n        </div>\n      </div>\n      <div id=\"circle-red\">\n        <img\n          className=\"circular-image\"\n          src={`${process.env.PUBLIC_URL}/assets/${props.datas.agent + \"Ultimate\"}.svg`}\n          alt=\"\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerRed;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./player/Player.css\";\nimport PlayerGreen from \"./player/PlayerGreen\";\nimport PlayerRed from \"./player/PlayerRed\";\n\nconst App = () => {\n  const datas = [\n    {\n      name: \"Bambank\",\n      agent: \"raze\",\n      health: \"100\",\n      shield: \"20\",\n      weapon: \"Ares\",\n      skillQuantity: [1, 2, 0],\n    },\n  ];\n\n  return (\n    <div className=\"content-wrapper\">\n    <div className=\"content\">\n      <div className=\"green-side\">\n        <PlayerGreen datas={datas[0]} />\n        <PlayerGreen datas={datas[0]} />\n        <PlayerGreen datas={datas[0]} />\n        <PlayerGreen datas={datas[0]} />\n        <PlayerGreen datas={datas[0]} />\n      </div>\n      <div className=\"red-side\">\n        <PlayerRed datas={datas[0]} />\n        <PlayerRed datas={datas[0]} />\n        <PlayerRed datas={datas[0]} />\n        <PlayerRed datas={datas[0]} />\n        <PlayerRed datas={datas[0]} />\n      </div>\n    </div>  \n    </div>\n    \n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}